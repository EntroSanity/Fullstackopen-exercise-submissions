{"ast":null,"code":"var _jsxFileName = \"/Users/coppersa/Desktop/Fullstackopen-exercise-submissions/part2/courseinfo/src/components/Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Part = _ref => {\n  let {\n    part\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.name, \" \", part.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 5\n  }, this);\n};\n_c = Part;\nconst Course = _ref2 => {\n  let {\n    course\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course[0].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), course[0].parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"total of \", course[0].parts.reduce((accumulator, currentValue) => accumulator + currentValue.exercises, 0), \" exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course[1].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), course[1].parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"total of \", course[1].parts.reduce((accumulator, currentValue) => accumulator + currentValue.exercises, 0), \" exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Course;\nexport default Course;\nvar _c, _c2;\n$RefreshReg$(_c, \"Part\");\n$RefreshReg$(_c2, \"Course\");","map":{"version":3,"names":["Part","_ref","part","_jsxDEV","children","name","exercises","fileName","_jsxFileName","lineNumber","columnNumber","_c","Course","_ref2","course","parts","map","id","reduce","accumulator","currentValue","_c2","$RefreshReg$"],"sources":["/Users/coppersa/Desktop/Fullstackopen-exercise-submissions/part2/courseinfo/src/components/Course.js"],"sourcesContent":["const Part = ({ part }) =>\n    <p>\n        {part.name} {part.exercises}\n    </p>\n\nconst Course = ({ course }) => {\n    return (\n        <div>\n\n            <h1>{course[0].name}</h1>\n            {course[0].parts.map(part =>\n                <Part key={part.id} part={part} />\n            )}\n            <p><strong>total of {course[0].parts.reduce((accumulator, currentValue) => accumulator + currentValue.exercises, 0)} exercises</strong></p>\n\n\n            <h1>{course[1].name}</h1>\n            {course[1].parts.map(part =>\n                <Part key={part.id} part={part} />\n            )}\n            <p><strong>total of {course[1].parts.reduce((accumulator, currentValue) => accumulator + currentValue.exercises, 0)} exercises</strong></p>\n        </div>\n    )\n}\n\nexport default Course"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAAA,oBAClBE,OAAA;IAAAC,QAAA,GACKF,IAAI,CAACG,IAAI,EAAC,GAAC,EAACH,IAAI,CAACI,SAAS;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3B;AAAA;AAAAC,EAAA,GAHFX,IAAI;AAKV,MAAMY,MAAM,GAAGC,KAAA,IAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,KAAA;EACtB,oBACIV,OAAA;IAAAC,QAAA,gBAEID,OAAA;MAAAC,QAAA,EAAKU,MAAM,CAAC,CAAC,CAAC,CAACT;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACxBI,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,CAACd,IAAI,iBACrBC,OAAA,CAACH,IAAI;MAAeE,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACe,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAgB,CACrC,eACDP,OAAA;MAAAC,QAAA,eAAGD,OAAA;QAAAC,QAAA,GAAQ,WAAS,EAACU,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAACG,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAW,GAAGC,YAAY,CAACd,SAAS,EAAE,CAAC,CAAC,EAAC,YAAU;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAG3IP,OAAA;MAAAC,QAAA,EAAKU,MAAM,CAAC,CAAC,CAAC,CAACT;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACxBI,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,CAACd,IAAI,iBACrBC,OAAA,CAACH,IAAI;MAAeE,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACe,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAgB,CACrC,eACDP,OAAA;MAAAC,QAAA,eAAGD,OAAA;QAAAC,QAAA,GAAQ,WAAS,EAACU,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAACG,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAW,GAAGC,YAAY,CAACd,SAAS,EAAE,CAAC,CAAC,EAAC,YAAU;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzI;AAEd,CAAC;AAAAW,GAAA,GAlBKT,MAAM;AAoBZ,eAAeA,MAAM;AAAA,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}